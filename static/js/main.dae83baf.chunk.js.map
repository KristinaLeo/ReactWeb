{"version":3,"sources":["avatar.png","boba.png","disney1.png","pethub.png","htmlweb.png","logo.svg","about.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","className","style","px","color","bg","alignItems","height","activeClass","to","spy","smooth","duration","variant","textDecoration","mx","marginLeft","id","src","avatar","alt","marginTop","textAlign","sx","maxWidth","lineHeight","justifyContent","marginBottom","width","backgroundColor","boba","href","target","disney1","pet","htmlweb","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dae83baf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.faf81c8c.png\";","module.exports = __webpack_public_path__ + \"static/media/boba.17b89299.png\";","module.exports = __webpack_public_path__ + \"static/media/disney1.c2c6860e.png\";","module.exports = __webpack_public_path__ + \"static/media/pethub.81cc803f.png\";","module.exports = __webpack_public_path__ + \"static/media/htmlweb.b3973f5f.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/about.bcd7793f.png\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Typing from 'react-typing-animation';\nimport { Box, Card, Image, Heading, Text, Flex} from 'rebass'\nimport avatar from './avatar.png';\nimport { StickyContainer, Sticky } from 'react-sticky';\nimport { Link, animateScroll as scroll} from 'react-scroll';\nimport aboutme from './about.png';\nimport boba from './boba.png';\nimport disney1 from './disney1.png';\nimport pet from './pethub.png';\nimport htmlweb from './htmlweb.png';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <StickyContainer>\n      <Sticky>\n          {({ style }) => <Flex px={5} color='white' bg='black' alignItems='center' height = {50} style = {style}>\n          <Link activeClass = \"active\" to = \"top\" spy = {true} smooth = {true} duration = {500} variant='nav' style = {{textDecoration:'none', color: 'white'}}>kristina leo</Link>\n        <Box mx='auto' />\n        <Link activeClass = \"active\" to = \"aboutme\" spy = {true} smooth = {true} duration = {500} variant='nav' style = {{textDecoration:'none', color: 'white', marginLeft: '50px'}}>about</Link>\n        <Link activeClass = \"active\" to = \"projects\" spy = {true} smooth = {true} duration = {500} variant='nav' style = {{textDecoration:'none', color: 'white', marginLeft: '50px'}}>projects</Link>\n        <Link activeClass = \"active\" to = \"contact\" spy = {true} smooth = {true} duration = {500} variant='nav' style = {{textDecoration:'none', color: 'white' , marginLeft: '50px'}}>contact</Link>\n\n      </Flex>}\n      </Sticky>\n\n      <header className=\"App-header\" id = \"top\">\n      <Typing>\n        <span>welcome! i'm kristina.</span>\n      </Typing>\n      </header>\n\n      <div className = \"darkbgd\" id = \"aboutme\">\n        <div className = \"txtbx1\">\n          <img className = \"avi\" src = {avatar} alt = \"image of me\"  height = \"300\" style= {{marginTop: '36px', textAlign: 'center'}}></img>\n        </div>\n          <h3> about me </h3>\n          <Box sx={{ maxWidth: 562, mx: 'auto', px: 3, lineHeight: 2, justifyContent: 'center',\n          marginBottom: '50'}}>\n            Hi! I'm Kristina, a senior at San Jose State University studying Computer Science.\n            I'm originally from San Francisco and would love to stay in the Bay Area, but\n            also living in Southern California is a dream of mine as well. \n            I have a strong interest towards UI/UX and front-end development. Please feel\n            free to look through the site and contact me if you think I'd be a great\n            match with your team!\n          </Box>\n      </div>\n      <div className = \"lightbgd\" id = \"projects\">\n          <h3> projects </h3>\n          <Flex mx = {4}>\n          <Box width={1/4} px={1}>\n            <Flex>\n              <Card width={256} height = {400} style = {{backgroundColor : 'white'}}>\n              <Image src={boba} />\n              <a href = \"https://www.figma.com/file/EFKqAoR8g0NgtvEBHXWtx9/Bay-Area-Boba?node-id=0%3A1\" target = \"_blank\" \n              color = \"black\" style = {{textDecoration : 'none', color: 'black'}}><h3>Bay Area Boba</h3></a>\n              <Text>If you know me, you know I like boba. These are some of my favorites in the Bay Area!</Text>\n              </Card>\n            </Flex>\n          </Box>\n          <Box width={1/4} px={1}>\n            <Flex>\n              <Card width={256} height = {400} style = {{backgroundColor : 'white'}}>\n              <Image src = {disney1} />\n              <a href = \"https://xd.adobe.com/view/e30abaf0-14b5-47d0-6e10-943a1fa670b4-953b/?fullscreen&hints=off\" target =\"_blank\"\n              color = \"black\" style = {{textDecoration : 'none', color: 'black'}}><h3> Disneyland Redesign w/ Adobe XD </h3></a>\n              <Text>I redesigned Disneyland's website with a for a holiday, minimalist theme.</Text>\n              </Card>\n            </Flex>\n          </Box>\n          <Box width={1/4} px={1}>\n            <Flex>\n              <Card width={256} height = {400} style = {{backgroundColor : 'white'}}>\n              <Image src= {pet} />\n              <a href = \"https://xd.adobe.com/view/3c18e723-ca5d-445e-4c3f-88cb8c78a23a-4a29/?fullscreen&hints=off\" target = \"_blank\"\n              color = \"black\" style = {{textDecoration : 'none', color: 'black'}}><h3>Pet Hub</h3></a>\n              <Text>This was a software engineering mockup/wireframe of an app of my own idea. It helped \n                me become familiar with Adobe XD and Adobe CC.\n              </Text>\n              </Card>\n            </Flex>\n          </Box>\n          <Box width={1/4} px={1}>\n            <Card width={256} height = {400} style = {{backgroundColor : 'white'}}>\n              <Image src={htmlweb} />\n              <h3>html/css/js website</h3>\n              <Text>This is the version of my website, but in html/css/js. (This one's with React!)</Text>\n            </Card>\n          </Box>\n        </Flex>\n      </div>\n      </StickyContainer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}